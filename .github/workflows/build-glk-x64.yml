name: Build WindowsGlk x64

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: microsoft/setup-msbuild@v2

      # Patcha just GlkDll/Glk.vcxproj f√∂r Release|x64
      - name: Configure Release x64 (MFC/Unicode/DLL)
        shell: pwsh
        run: |
          $proj = Join-Path $env:GITHUB_WORKSPACE 'GlkDll\Glk.vcxproj'
          [xml]$x = Get-Content $proj
          $cond = " '$(Configuration)|$(Platform)' == 'Release|x64' "
          $grp = $x.Project.PropertyGroup | Where-Object { $_.Condition -eq $cond }
          if (-not $grp) { $grp = $x.CreateElement('PropertyGroup'); $grp.SetAttribute('Condition',$cond); $x.Project.AppendChild($grp) | Out-Null }
          $set = @{ ConfigurationType='DynamicLibrary'; UseOfMfc='Dynamic'; CharacterSet='Unicode'; PlatformToolset='v143' }
          foreach ($k in $set.Keys) {
            if ($grp.$k) { $grp.$k.InnerText = $set[$k] }
            else { $e=$x.CreateElement($k); $e.InnerText=$set[$k]; $grp.AppendChild($e) | Out-Null }
          }
          $idg = $x.Project.ItemDefinitionGroup | Where-Object { $_.Condition -eq $cond }
          if (-not $idg) { $idg = $x.CreateElement('ItemDefinitionGroup'); $idg.SetAttribute('Condition',$cond); $x.Project.AppendChild($idg) | Out-Null }
          if (-not $idg.Link) { $lnk = $x.CreateElement('Link'); $idg.AppendChild($lnk) | Out-Null } else { $lnk = $idg.Link }
          if (-not $lnk.ModuleDefinitionFile) { $e=$x.CreateElement('ModuleDefinitionFile'); $e.InnerText='Glk.def'; $lnk.AppendChild($e) | Out-Null }
          $x.Save($proj)

      - name: Build Release x64
        run: msbuild GlkDll\Glk.sln /m /p:Configuration=Release /p:Platform=x64 /v:m

      - name: Collect artifacts
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force out | Out-Null
          Copy-Item GlkDll\x64\Release\Glk.dll -Destination out -Force
          Copy-Item GlkDll\x64\Release\Glk.lib -Destination out -ErrorAction SilentlyContinue
          Copy-Item GlkDll\x64\Release\Glk.pdb -Destination out -ErrorAction SilentlyContinue
          Get-ChildItem out

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windowsglk-x64
          path: out/*

  make-importlib:
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: windowsglk-x64
          path: .

      - run: sudo apt-get update && sudo apt-get install -y mingw-w64 binutils-mingw-w64 gendef

      - name: Generate MinGW import lib
        run: |
          gendef Glk.dll
          dlltool -m i386:x86-64 -d Glk.def -D Glk.dll -l libGlk.dll.a
          file Glk.dll libGlk.dll.a || true

      - uses: actions/upload-artifact@v4
        with:
          name: windowsglk-x64-mingw
          path: |
            Glk.def
            libGlk.dll.a
